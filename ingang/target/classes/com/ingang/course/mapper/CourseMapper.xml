<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ingang.course.mapper.CourseMapper">

	<!-- 리스트 -->
	<select id="list" resultType="com.ingang.course.vo.CourseVO">
	select no, title, startDate, endDate, image, price, teacher, name
	from(
		select rownum rnum, no, title, startDate, endDate, image, price, teacher, name
		from(
			select c.no, c.title, c.startDate, c.endDate, c.image, c.price, c.teacher, m.name
			from course c inner join member m
			on c.teacher = m.id
<!-- 			from course c, member m -->
<!-- 			where m.id = c.teacher -->
			<!-- 검색처리1 (123) -->
			<include refid="search" />
			order by no desc
		)
	)
	where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="getTotalRow" resultType="Long">
		select count(*)
		from course c inner join member m
		on c.teacher = m.id
		<!-- 검색처리2 -->
		<include refid="search"></include>
	</select>
	
	<!-- 검색처리3 -->
	<sql id="search">
		<if test="word !=null and word !=''.toString()">
			where 1 = 0
			<if test="key.indexOf('t'.toString()) >= 0">
				or title like '%' || #{word} || '%'
			</if>
			<if test="key.indexOf('n'.toString()) >= 0">
				or name like '%' || #{word} || '%'
			</if>
		</if>
	</sql>
	
	<!-- 보기 -->
	<select id="view" resultType="com.ingang.course.vo.CourseVO">
	select c.no, c.title, c.content, c.writeDate, c.startDate, c.endDate, c.updateDate, c.vid, c.image, c.price, c.cbno, b.fileName, c.teacher, m.name
	from course c, member m, book b
	where (no = #{no}) and (m.id = c.teacher) and (b.bookNo = c.cbno)
	</select>
	
	<!-- 등록 -->
	<insert id="write">
	insert into course(no, title, content, startDate, endDate, vid, vidlength, image, price, cbno, writer, teacher)
	values(course_seq.nextval, #{title}, #{content}, #{startDate}, #{endDate}, #{vid}, #{vidlength}, #{image}, #{price}, #{cbno}, #{writer}, #{teacher})
	</insert>
	
	<!-- 수정 -->
	<update id="update">
	update course set title = #{title}, content = #{content}, startDate = #{startDate}, endDate = #{endDate},
	vid = #{vid}, image = #{image}, price = #{price}, cbno = #{cbno}, teacher = #{teacher}
	where no = #{no}
	</update>
	
	<!-- 삭제 -->
	<delete id="delete">
	delete from course
	where no = #{no}
	</delete>
	
	
	<!-- 메인 랜덤 리스트 -->
	<select id="mainList" resultType="com.ingang.course.vo.CourseVO">
		select c.image, c.title, c.startDate, c.endDate, c.teacher, c.price, c.no, m.name
		from(
		    select  image, title, startDate, endDate, teacher, price, no
		    from course c
		    order by DBMS_RANDOM.VALUE
		) c
		JOIN member m ON c.teacher = m.id
		where rownum between 1 and 6
	</select>
	
	
</mapper>